syntax = "proto3";
package tradelog_api;

option java_multiple_files = true;
option java_package = "com.example.tradelog.api.spec.model";

message TLTransactionSettingsDto {
    string transactionId = 1;
    double preferredPrice = 2;
    bool groupSelected = 3;
    bool legClosed = 4;
}

message TLTransactionDto {
    string id = 1;
    string accountId = 2;
    string date = 3;
    string symbol = 4;
    double brokerFees = 5;
    TransactionType type = 6;
    TLTransactionSettingsDto settings = 7;

    enum TransactionType {
        UNKNOWN_TRANSACTION_TYPE = 0;
        SHARE = 1;
        SYNTHETIC_SHARE = 2;
        OPTION = 3;
        DIVIDEND = 4;
    }
}

message TLOptionJournalDto {
    TLTransactionDto transactionDetails = 1;
    double stockPrice = 2;
    double strikePrice = 3;
    string expiryDate = 4;
    int32 contracts = 5;
    double premium = 6;
    ActionType action = 7;
    OptionType optionType = 8;

    enum OptionType {
        UNKNOWN_OPTION_TYPE = 0;
        PUT = 1;
        CALL = 2;
    }

    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0;
        SELL = 1;
        BUY = 2;
    }
}

message TLOptionTransactionsResponse {
    repeated TLOptionJournalDto optionItems = 1;
}

message TLShareJournalDto {
    TLTransactionDto transactionDetails = 1;
    double price = 2;
    int32 quantity = 3;
    ActionType action = 4;

    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0;
        SELL = 1;
        BUY = 2;
    }
}

message TLShareTransactionsResponse {
    repeated TLShareJournalDto shareItems = 1;
}

message TLDividendJournalDto {
    TLTransactionDto transactionDetails = 1;
    double dividend = 2;
    int32 quantity = 3;
}

message TLDividendTransactionsResponse {
    repeated TLDividendJournalDto dividendItems = 1;
}

message TLTradeLogDto {
    repeated TLShareJournalDto shareList = 1;
    repeated TLOptionJournalDto optionList = 2;
    repeated TLDividendJournalDto dividendList = 3;
}

// Used to get trade summary per symbol
message TLTradeSummaryResponse {
    repeated TLTradeSummaryItem items = 1;
}

message TLTradeSummaryItem {
    string symbol = 1;
    int32 trades = 2;
    double total = 3;
    bool leg_closed = 4;
}

message TLSummaryMatrixResponse {
    repeated TLSummaryMatrixItem items = 1;
}

message TLSummaryMatrixItem {
    int32 year = 1;
    int32 month = 2;
    double total = 3;
}

// Used to get all symbols traded
message TLActiveSymbolsResponse {
    repeated string symbols = 1;
}

// Generic error response
message ExceptionResponse {
    ExceptionCode code = 1;
    string message = 2;
    string details = 3;
    string timestamp = 4;

    enum ExceptionCode {
        UNKNOWN_CODE = 0;
        BAD_REQUEST = 1;
        NO_DATA = 2;
    }
}