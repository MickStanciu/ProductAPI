syntax = "proto3";
package gateway_api;

option java_multiple_files = true;
option java_package = "com.example.gateway.api.spec.model";

message StatisticsDto {
    int32 total_calls = 1;
    int32 selected_calls = 2;
    int32 total_puts = 3;
    int32 selected_puts = 4;
    int32 total_stocks = 5;
    int32 selected_stocks = 6;
    double total_realised_premium = 7;
    double selected_realised_premium = 8;
}

message CreateShareJournalDto {
    string symbol = 1;
    string date = 2;
    double price = 3;
    int32 quantity = 4;
    double broker_fees = 5;
    ActionType action = 6;

    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0;
        SELL = 1;
        BUY = 2;
    }
}

message ShareJournalDto {
    string transaction_id = 1;
    string date = 2;
    string symbol = 3;
    double price = 4;
    double actual_price = 5;
    double preferred_price = 6;
    int32 quantity = 7;
    double broker_fees = 8;
    bool group_selected = 9;
    bool leg_closed = 10;
    ActionType action = 11;
    TransactionType type = 12;

    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0;
        SELL = 1;
        BUY = 2;
    }

    enum TransactionType {
        UNKNOWN_TRANSACTION_TYPE = 0;
        SHARE = 1;
        SYNTHETIC_SHARE = 2;
        OPTION = 3;
        DIVIDEND = 4;
    }
}

message CreateOptionJournalDto {
    string stock_symbol = 1;
    string date = 2;
    double stock_price = 3;
    double strike_price = 4;
    string expiry_date = 5;
    int32 contracts = 6;
    double premium = 7;
    double broker_fees = 8;
    ActionType action = 9;
    OptionType option_type = 10;

    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0;
        SELL = 1;
        BUY = 2;
    }

    enum OptionType {
        UNKNOWN_OPTION_TYPE = 0;
        PUT = 1;
        CALL = 2;
    }
}

message OptionJournalDto {
    string transaction_id = 1;
    string account_id = 2;
    string date = 3;
    string stock_symbol = 4;
    double stock_price = 5;
    double strike_price = 6;
    string expiry_date = 7;
    int32 contracts = 8;
    double premium = 9;
    double broker_fees = 10;
    bool group_selected = 11;
    bool leg_closed = 12;
    ActionType action = 13;
    OptionType option_type = 14;
    TransactionType type = 15;

    enum OptionType {
        UNKNOWN_OPTION_TYPE = 0;
        PUT = 1;
        CALL = 2;
    }

    enum ActionType {
        UNKNOWN_ACTION_TYPE = 0;
        SELL = 1;
        BUY = 2;
    }

    enum TransactionType {
        UNKNOWN_TRANSACTION_TYPE = 0;
        SHARE = 1;
        SYNTHETIC_SHARE = 2;
        OPTION = 3;
        DIVIDEND = 4;
    }
}

message DividendJournalDto {
    string transaction_id = 1;
    string account_id = 2;
    string date = 3;
    string symbol = 4;
    int32 quantity = 5;
    double dividend = 6;
    bool group_selected = 7;
    bool leg_closed = 8;
    TransactionType type = 9;

    enum TransactionType {
        UNKNOWN_TRANSACTION_TYPE = 0;
        SHARE = 1;
        SYNTHETIC_SHARE = 2;
        OPTION = 3;
        DIVIDEND = 4;
    }
}

message TradeLogDto {
    repeated ShareJournalDto share_list = 1;
    repeated OptionJournalDto option_list = 2;
    repeated DividendJournalDto dividend_list = 3;
    StatisticsDto statistics = 4;
}

message TradeSummaryResponse {
    repeated TradeSummaryDto items = 1;
}

message TradeSummaryDto {
    string symbol = 1;
    int32 trades = 2;
    double total = 3;
}

message TransactionSettingsDto {
    string transaction_id = 1;
    double preferred_price = 2;
    bool group_selected = 3;
    bool leg_closed = 4;
}

message ShareDataDto {
    string symbol = 1;
    string last_updated_on = 2;
    string sector = 3;
    double price = 4;
    double market_capitalization = 5;
    double pe_ratio = 6;
    double pe_ratio_future = 7;
    double book_value = 8;
    double eps = 9;
    double eps_future = 10;
    double finviz_target = 11;
    double calculated_target = 12;
}

message AuthTokenDto {
    string token = 1;
}

// Used to get all symbols traded
message ActiveSymbolsResponse {
    repeated string symbols = 1;
}
