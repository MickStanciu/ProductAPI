version: '3.5'
services:
#  consul:
#    build: docker/discovery-com.example.accountapi.service/.
#    container_name: consul
#    image: consul
#    restart: always
#    hostname: consul
#    ports:
#      - "8500:8500" #HTTP SERVER

#  web:
#    build: web/docker/.
#    image: web
#    container_name: web
#    ports:
#      - "8080:8080" #WildFly App
#      - "8780:8787" #WildFly Debug
#    volumes:
#      - ./web/target/web.war:/opt/jboss/wildfly/standalone/deployments/web.war
#    environment:
#      - GATEWAY_API_ADDRESS=http://gatewayapi:8080
#      - MOCK_SERVICES=true

#  gateway-api:
#    build: docker/gateway-api/.
#    image: gateway-api
#    container_name: gateway-api
#    ports:
#      - "8085:8080"

#  tenantapi:
#    build: tenant.spring/.
#    image: tenantapi
#    container_name: tenantapi
#    ports:
#      - "8081:8080" #App
#    depends_on:
#      - postgresql

#  accountapi:
#    build: account/.
#    image: accountapi
#    container_name: accountapi
#    ports:
#      - "8082:8080" #App
#    depends_on:
#      - postgresql

#  customerapi:
#    build: customer/docker/.
#    image: customerapi
#    container_name: customerapi
#    ports:
#      - "8083:8080" #WildFly App
#      - "8783:8787" #WildFly Debug
#    volumes:
#      - ./customer/target/customer.war:/opt/jboss/wildfly/standalone/deployments/customer.war
#    depends_on:
#      - postgresql

#  timesheetapi:
#    build: timesheet/.
#    image: timesheetapi
#    container_name: timesheetapi
#    ports:
#      - "8084:8080" #App
#    depends_on:
#      - postgresql

  postgresql:
    build: docker/database-server/.
    image: personal-db
    container_name: personal-db
    ports:
      - "5432:5432"
    volumes:
      - ${DOCKER_BASE}/database-server/data:/var/lib/postgresql/data:rw
      - ${DOCKER_BASE}/database-server/backup:/var/lib/postgresql/backup:rw

#  redis:
#    build: docker/redis-server/.
#    image: local-redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - `/data:/data:rw

#  lizardfs:
#    build: docker/storage-server/.
#    image: toystore-fs
#    container_name: toystore-fs

#  memcache:
#    build: docker/memcache-server/.
#    container_name: memcache
#    image: memcache
#    restart: always
#    hostname: memcache
#    ports:
#      - "11211:11211" #MEMCACHED SERVER

#export COMPOSE_PROJECT_NAME=viatornet
