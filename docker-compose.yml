version: '3.4'
services:
  consul:
    build: docker/discovery-service/.
    container_name: consul
    image: consul
#    restart: always
#    hostname: consul
    ports:
      - 8500:8500

  web:
    build: web/docker/.
    image: web
    container_name: web
    ports:
      - "80:8080" #WildFly App
      - "87:8787" #WildFly Debug
    volumes:
      - ./web/target/web.war:/opt/jboss/wildfly/standalone/deployments/web.war

  gatewayapi:
    build: gatewayapi/docker/.
    image: gatewayapi
    container_name: gatewayapi
    ports:
      - "8080:8080" #WildFly App
      - "8787:8787" #WildFly Debug
    volumes:
      - ./gatewayapi/target/gatewayapi.war:/opt/jboss/wildfly/standalone/deployments/gatewayapi.war

  tenantapi:
    build: tenant/docker/.
    image: tenantapi
    container_name: tenantapi
    ports:
      - "8081:8080" #WildFly App
      - "8788:8787" #WildFly Debug
    volumes:
      - ./tenant/target/tenant.war:/opt/jboss/wildfly/standalone/deployments/tenant.war
    depends_on:
      - postgresql

#  wildfly:
#    build: docker/application-server/.
#    image: toystore
#    container_name: toystore
#    ports:
#      - "8080:8080" #APP
#      - "8787:8787" #DEBUG
#      - "8443:8443" #APP SSL
#      - "9990:9990" #MANAGEMENT
#    depends_on:
#      postgresql:
#        condition: service_started
#      lizardfs:
#        condition: service_started

  postgresql:
    build: docker/database-server/.
    image: toystore-db
    container_name: toystore-db
    ports:
      - "5432:5432"
    volumes:
      - ${DOCKER_BASE}/database-server/data:/var/lib/postgresql/data:rw

#  lizardfs:
#    build: docker/storage-server/.
#    image: toystore-fs
#    container_name: toystore-fs
