version: '3.4'
services:
#  consul:
#    build: docker/discovery-service/.
#    container_name: consul
#    image: consul
#    restart: always
#    hostname: consul
#    ports:
#      - "8500:8500"

  web:
    build: vue/.
    image: vue
    container_name: vue
    ports:
      - "80:8080" #NodeJs App
    volumes:
      - ./vue/app:/usr/app/
      - /usr/app/node_modules

  gatewayapi:
    build: gatewayapi/docker/.
    image: gatewayapi
    container_name: gatewayapi
    ports:
      - "8080:8080" #WildFly App
      - "8780:8787" #WildFly Debug
    volumes:
      - ./gatewayapi/target/gatewayapi.war:/opt/jboss/wildfly/standalone/deployments/gatewayapi.war

  tenantapi:
    build: tenant/docker/.
    image: tenantapi
    container_name: tenantapi
    ports:
      - "8081:8080" #WildFly App
      - "8781:8787" #WildFly Debug
    volumes:
      - ./tenant/target/tenant.war:/opt/jboss/wildfly/standalone/deployments/tenant.war
    depends_on:
      - postgresql

  accountapi:
    build: account/docker/.
    image: accountapi
    container_name: accountapi
    ports:
      - "8082:8080" #WildFly App
      - "8782:8787" #WildFly Debug
    volumes:
      - ./account/target/account.war:/opt/jboss/wildfly/standalone/deployments/account.war
    depends_on:
      - postgresql

  customerapi:
    build: customer/docker/.
    image: customerapi
    container_name: customerapi
    ports:
      - "8083:8080" #WildFly App
      - "8783:8787" #WildFly Debug
    volumes:
      - ./customer/target/customer.war:/opt/jboss/wildfly/standalone/deployments/customer.war
    depends_on:
      - postgresql

  postgresql:
    build: docker/database-server/.
    image: toystore-db
    container_name: toystore-db
    ports:
      - "5432:5432"
    volumes:
      - ${DOCKER_BASE}/database-server/data:/var/lib/postgresql/data:rw

#  lizardfs:
#    build: docker/storage-server/.
#    image: toystore-fs
#    container_name: toystore-fs
